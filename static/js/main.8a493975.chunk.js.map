{"version":3,"sources":["reportWebVitals.ts","state/useQueryParamState.ts","screens/AddPerson/TimeRange.tsx","utils/requestIdleCallback.ts","screens/AddPerson/TimezonePicker.tsx","screens/AddPerson/AddPerson.tsx","screens/Dev/Dev.tsx","utils/Observable.ts","screens/PersonDetail/useHeartbeat.ts","screens/PersonDetail/Indicator.tsx","state/hour12.ts","screens/PersonDetail/TimeMarker.tsx","screens/PersonDetail/Meter.tsx","screens/PersonDetail/PersonDetail.tsx","screens/App/MeterViewModePicker.tsx","screens/App/TimeFormatSwitch.tsx","screens/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","identity","value","useQueryParamState","name","deserialize","serialize","React","URL","window","location","href","searchParams","get","setValue","newRawValue","serializedValue","url","delete","set","history","pushState","undefined","toString","hoursInDay","Array","from","length","_","i","toTimeValue","time","toLocaleString","hourCycle","hour","minute","TimeOptions","id","map","Temporal","PlainTime","add","minutes","TimeRange","endName","startName","workingStartTime","setWorkingStartTime","workingEndTime","setWorkingEndTime","aria-label","className","defaultValue","list","max","subtract","onChange","event","target","step","type","min","requestIdleCallback","cb","___timezones","timezones","lazyTimezoneOptions","Promise","resolve","timezone","tz","TimeZone","TZ","offset","getOffsetStringFor","Now","instant","label","sort","a","b","localeCompare","TimezoneOptions","options","mountedRef","setOptions","timezoneOptions","current","useLazyTimezoneOptions","TimezonePicker","props","required","getFormControlValue","form","element","elements","namedItem","timeToNumber","split","n","Number","AddPerson","effect","autoOpen","onAdd","triggerRef","dialogRef","formRef","openDialog","open","showModal","onClick","ref","onClose","reset","focus","method","onSubmit","currentTarget","meterBackgroundColor","workingHoursEnd","workingHoursStart","Math","random","slice","Date","now","theme","workingHours","start","htmlFor","size","close","Dev","personState","setPersonState","preventDefault","json","JSON","parse","stringify","rows","mockPersonState","MulticastObservable","init","Set","this","next","subscription","Subscription","unsubscribe","observer","GLOBAL_KEY","w","controller","AbortController","ms","signal","callback","document","timeline","currentTime","performance","frame","aborted","scheduleFrame","elapsed","roundedElapsed","round","delay","setTimeout","requestAnimationFrame","animationInterval","abort","heartbeatObservable","num","EPSILON","Indicator","endHour","endMinute","startHour","startMinute","timeZone","forceUpdate","subscribe","useHeartbeat","left","end","nowInstant","calendar","Intl","DateTimeFormat","resolvedOptions","toZonedDateTime","startOfDay","startSeconds","hours","epochSeconds","endSeconds","currentPercent","style","storageKey","hour12Atom","atomWithReducer","key","initialValue","localStorageValue","localStorage","getItem","setItem","getStorageValue","hour12","setStorageValue","useHour12State","useAtom","TimeMarker","setHours","formattedTime","toLocaleTimeString","Meter","color","highlightHourStart","highlightLength","hourStart","hourEnd","highlightEndHour","ceil","fill","highlightColor","backgroundColor","PersonDetail","meterViewMode","onDelete","onMoveDown","onMoveUp","person","mode","Error","getMeterTimeProps","disabled","message","confirm","MeterViewModePicker","TimeFormatSwitch","setHour12","textAlign","checked","App","val","setMeterViewMode","data","atob","btoa","handleDelete","filter","handleMove","delta","personIndex","findIndex","newIndex","state","handleMoveDown","handleMoveUp","empty","newPerson","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a493975.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\n\nexport const identity = <T>(value: T) => value;\n\nexport function useQueryParamState<T = string | null>(\n  name: string,\n  deserialize: (value: string | null) => T,\n  serialize: (value: T) => string | null,\n): [T, (value: T) => void] {\n  const [value, setValue] = React.useState(() => {\n    const url = new URL(window.location.href);\n    return url.searchParams.get(name);\n  });\n\n  function handleChange(newRawValue: T) {\n    const url = new URL(window.location.href);\n\n    let serializedValue: string | null;\n    try {\n      serializedValue = serialize(newRawValue);\n    } catch {\n      // If the value can't be serialized, don't set it\n      return;\n    }\n\n    if (serializedValue == null) {\n      url.searchParams.delete(name);\n    } else {\n      url.searchParams.set(name, serializedValue);\n    }\n\n    setValue(serializedValue);\n    window.history.pushState(undefined, '', url.toString());\n  }\n\n  return [deserialize(value), handleChange];\n}\n\n/**\n * Used to store structured data — base64 encoded — into a single query parameter.\n */\nexport function useEncodedQueryParamState<T>(\n  paramKey: string,\n): [T | undefined, (value: T) => void] {\n  function deserialize(value: string | null): T | undefined {\n    try {\n      const data = atob(value ?? '');\n      return JSON.parse(data);\n    } catch {\n      return undefined;\n    }\n  }\n\n  function serialize(value: T | undefined): string | null {\n    return value === undefined ? null : btoa(JSON.stringify(value));\n  }\n\n  return useQueryParamState(paramKey, deserialize, serialize);\n}\n","import { Temporal } from '@js-temporal/polyfill';\nimport * as React from 'react';\n\nconst hoursInDay = Array.from({ length: 24 }, (_, i) => i);\n\n/**\n * Convert a PlainTime instance to an ISO string — such as \"09:00\"\n */\nfunction toTimeValue(time: Temporal.PlainTime): string {\n  return time.toLocaleString(undefined, { hourCycle: 'h23', hour: '2-digit', minute: '2-digit' });\n}\n\nconst TimeOptions = React.memo(function TimeOptions() {\n  return (\n    <datalist id=\"working-hour-options\">\n      {hoursInDay.map((hour) => {\n        const time = new Temporal.PlainTime(hour);\n        return (\n          <React.Fragment key={hour}>\n            <option value={toTimeValue(time)} />\n            <option value={toTimeValue(time.add({ minutes: 30 }))} />\n          </React.Fragment>\n        );\n      })}\n    </datalist>\n  );\n});\n\ninterface TimeRangeProps {\n  endName: string;\n  startName: string;\n}\n\nexport const TimeRange = React.memo(function TimeRange({ endName, startName }: TimeRangeProps) {\n  const [workingStartTime, setWorkingStartTime] = React.useState(() =>\n    Temporal.PlainTime.from('09:00'),\n  );\n  const [workingEndTime, setWorkingEndTime] = React.useState(() =>\n    Temporal.PlainTime.from('17:00'),\n  );\n\n  return (\n    <div>\n      <input\n        aria-label=\"Start time\"\n        className=\"input\"\n        defaultValue=\"09:00\"\n        list=\"working-hour-options\"\n        max={toTimeValue(workingEndTime.subtract({ minutes: 30 }))}\n        name={startName}\n        onChange={(event) => setWorkingStartTime(Temporal.PlainTime.from(event.target.value))}\n        step=\"1800\"\n        type=\"time\"\n      />\n      {' – '}\n      <input\n        aria-label=\"End time\"\n        className=\"input\"\n        defaultValue=\"17:00\"\n        list=\"working-hour-options\"\n        min={toTimeValue(workingStartTime.add({ minutes: 30 }))}\n        name={endName}\n        onChange={(event) => setWorkingEndTime(Temporal.PlainTime.from(event.target.value))}\n        step=\"1800\"\n        type=\"time\"\n      />\n      <TimeOptions />\n    </div>\n  );\n});\n","type RequestIdleCallback = (cb: (idleDeadline: any) => any) => number;\n\nexport const requestIdleCallback: RequestIdleCallback =\n  (window as any).requestIdleCallback ?? ((cb: () => void) => cb());\n","import { Temporal } from '@js-temporal/polyfill';\nimport * as React from 'react';\nimport type { SelectHTMLAttributes } from 'react';\n\nimport timezones from '../../__generated__/timezones.json';\nimport { requestIdleCallback } from '../../utils/requestIdleCallback';\n\n// DEV\n(window as any).___timezones = timezones;\n\n// or, you know, this is pre-processed...\nconst lazyTimezoneOptions = new Promise<TimezoneOption[]>((resolve) => {\n  requestIdleCallback(() => {\n    resolve(\n      timezones\n        .map((timezone) => {\n          const tz = Temporal.TimeZone.from(timezone.TZ);\n          const offset = tz.getOffsetStringFor?.(Temporal.Now.instant());\n          return {\n            label: `${timezone.TZ} (${offset})`,\n            value: timezone.TZ,\n          };\n        })\n        .sort((a, b) => a.label.localeCompare(b.label)),\n    );\n  });\n});\n\ninterface TimezoneOption {\n  label: string;\n  value: string;\n}\n\nfunction useLazyTimezoneOptions(): TimezoneOption[] {\n  const mountedRef = React.useRef(true);\n  const [options, setOptions] = React.useState<TimezoneOption[]>([]);\n\n  React.useEffect(() => {\n    lazyTimezoneOptions.then((timezoneOptions) => {\n      if (mountedRef.current) {\n        setOptions(timezoneOptions);\n      }\n    });\n  }, []);\n\n  return options;\n}\n\nconst TimezoneOptions = React.memo(function TimezoneOptions() {\n  const options = useLazyTimezoneOptions();\n\n  return (\n    <>\n      {options.map(({ label, value }) => {\n        return (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        );\n      })}\n    </>\n  );\n});\n\ninterface TimezonePickerProps extends Omit<SelectHTMLAttributes<HTMLSelectElement>, 'children'> {}\n\nexport function TimezonePicker(props: TimezonePickerProps) {\n  return (\n    <select {...props} className=\"picker min-w-full\" required>\n      <TimezoneOptions />\n    </select>\n  );\n}\n","import * as React from 'react';\nimport type { FormEvent } from 'react';\n\nimport type { Person } from '../../types';\n\nimport { TimeRange } from './TimeRange';\nimport { TimezonePicker } from './TimezonePicker';\n\ndeclare module 'react' {\n  interface DialogHTMLAttributes<T> extends HTMLAttributes<T> {\n    onCancel?: ReactEventHandler<T>;\n    onClose?: ReactEventHandler<T>;\n  }\n}\n\nconst id = {\n  meterBackgroundColor: 'add-person__meterBackgroundColor',\n  name: 'add-person__name',\n  timezone: 'add-person__timezone',\n  workingHoursEnd: 'add-person__workingHoursEnd',\n  workingHoursStart: 'add-person__workingHoursStart',\n};\n\nfunction getFormControlValue(form: HTMLFormElement, id: string): string {\n  const element = form.elements.namedItem(id);\n  if (element == null) {\n    return '';\n  }\n  return (element as HTMLInputElement).value;\n}\n\n/**\n * Convert ISO time to number — \"09:30\" → 9.5\n */\nfunction timeToNumber(value: string) {\n  const [hour, minute] = value.split(':').map((n) => Number(n));\n  return hour + minute / 60;\n}\n\nfunction useEffectOnce(effect: () => void) {\n  React.useEffect(() => {\n    effect();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n}\n\ninterface AddPersonProps {\n  autoOpen: boolean;\n  onAdd(person: Person): void;\n}\n\nexport function AddPerson({ autoOpen, onAdd }: AddPersonProps) {\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const dialogRef = React.useRef<HTMLDialogElement>(null);\n  const formRef = React.useRef<HTMLFormElement>(null);\n\n  useEffectOnce(() => {\n    if (autoOpen) {\n      openDialog();\n    }\n  });\n\n  function openDialog() {\n    if (dialogRef.current && !dialogRef.current.open) {\n      // backdrop is only displayed when dialog is opened with dialog.showModal()\n      dialogRef.current.showModal();\n    }\n  }\n\n  function resetForm() {\n    if (formRef.current) {\n      formRef.current.reset();\n    }\n  }\n\n  function handleClose() {\n    resetForm();\n    triggerRef.current?.focus();\n  }\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    const form = event.currentTarget;\n    const meterBackgroundColor = getFormControlValue(form, id.meterBackgroundColor);\n    const name = getFormControlValue(form, id.name);\n    const timezone = getFormControlValue(form, id.timezone);\n    const workingHoursEnd = timeToNumber(getFormControlValue(form, id.workingHoursEnd));\n    const workingHoursStart = timeToNumber(getFormControlValue(form, id.workingHoursStart));\n\n    onAdd({\n      id: Math.random().toString(36).slice(2) + Date.now().toString(36),\n      name,\n      theme: {\n        meterBackgroundColor,\n      },\n      timezone,\n      workingHours: {\n        start: workingHoursStart,\n        length: workingHoursEnd - workingHoursStart,\n      },\n    });\n  }\n\n  return (\n    <section>\n      <button\n        className=\"button--primary\"\n        onClick={() => openDialog()}\n        ref={triggerRef}\n        type=\"button\"\n      >\n        Add person\n      </button>\n      <dialog\n        aria-label=\"Add person\"\n        className=\"rounded-md shadow-lg z-50 min-w-dialog\"\n        onClose={handleClose}\n        ref={dialogRef}\n      >\n        <form className=\"space-y-4\" method=\"dialog\" onSubmit={handleSubmit} ref={formRef}>\n          <div className=\"form-field\">\n            <label className=\"label\" htmlFor={id.name}>\n              Name\n            </label>\n            <input className=\"input\" id={id.name} name={id.name} required size={24} type=\"text\" />\n          </div>\n          <div className=\"form-field\">\n            <label className=\"label\" htmlFor={id.timezone}>\n              Timezone\n            </label>\n            <TimezonePicker id={id.timezone} name={id.timezone} />\n          </div>\n          <fieldset className=\"border p-2\">\n            <legend className=\"label px-1\">Working Hours</legend>\n            <div className=\"space-y-4 px-1\">\n              <div className=\"form-field\">\n                <TimeRange endName={id.workingHoursEnd} startName={id.workingHoursStart} />\n              </div>\n              <div className=\"form-field\">\n                <label className=\"label\" htmlFor={id.meterBackgroundColor}>\n                  Background Color\n                </label>\n                <input\n                  defaultValue=\"#ffffff\"\n                  id={id.meterBackgroundColor}\n                  name={id.meterBackgroundColor}\n                  type=\"color\"\n                />\n              </div>\n            </div>\n          </fieldset>\n          <div className=\"space-x-2\">\n            <button className=\"button--primary\" type=\"submit\">\n              Add\n            </button>\n            <button\n              className=\"button--secondary\"\n              onClick={() => dialogRef.current?.close()}\n              type=\"button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </dialog>\n    </section>\n  );\n}\n","import type { FormEvent } from 'react';\n\nimport type { Person } from '../../types';\n\nimport mockPersonState from './mockPersonState.json';\n\ninterface DevProps {\n  personState: Person[];\n  setPersonState(state: Person[]): void;\n}\n\nexport function Dev({ personState, setPersonState }: DevProps) {\n  function handleSetPersonState(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const json = (form[0] as HTMLTextAreaElement).value;\n    setPersonState(JSON.parse(json));\n  }\n\n  return (\n    <details>\n      <summary>Dev tools</summary>\n      <div className=\"pt-4 space-y-4\">\n        <form aria-label=\"Set JSON state\" className=\"space-y-2\" onSubmit={handleSetPersonState}>\n          <div className=\"form-field\">\n            <label className=\"label\" htmlFor=\"dev__current-state\">\n              Current state\n            </label>\n            <textarea\n              className=\"border border-gray-500 font-mono text-sm w-full\"\n              defaultValue={JSON.stringify(personState, null, 2)}\n              id=\"dev__current-state\"\n              name=\"state-json\"\n              rows={24}\n            />\n          </div>\n          <div className=\"space-x-2\">\n            <button className=\"button--primary\" type=\"submit\">\n              set\n            </button>\n            <button className=\"button--secondary\" type=\"reset\">\n              reset\n            </button>\n          </div>\n        </form>\n        <button\n          className=\"button--primary\"\n          onClick={() => setPersonState(mockPersonState)}\n          type=\"button\"\n        >\n          set state to mock data\n        </button>\n      </div>\n    </details>\n  );\n}\n","interface Observer<T> {\n  next(value: T): void;\n  // error(error: unknown): void;\n  // complete(): void;\n}\n\ntype Teardown = () => void;\n\nexport class MulticastObservable<T> {\n  #init: (observer: Observer<T>) => Teardown;\n  #subscriptions: Set<Subscription<T>> = new Set();\n  #teardown: Teardown | undefined;\n\n  constructor(init: (observer: Observer<T>) => Teardown) {\n    this.#init = init;\n  }\n\n  subscribe(next: (value: T) => void): Teardown {\n    const subscription = new Subscription({ next });\n    this.#subscriptions.add(subscription);\n\n    if (this.#subscriptions.size === 1) {\n      this.#teardown = this.#init(\n        new Subscription({\n          next: (value: T) => {\n            for (const subscription of this.#subscriptions) {\n              subscription.next(value);\n            }\n          },\n        }),\n      );\n    }\n\n    return () => {\n      this.#subscriptions.delete(subscription);\n      subscription.unsubscribe();\n\n      if (this.#subscriptions.size === 0) {\n        this.#teardown?.();\n        this.#teardown = undefined;\n      }\n    };\n  }\n}\n\nclass Subscription<T> {\n  #observer: Observer<T>;\n  #subscribed = false;\n\n  constructor(observer: Observer<T>) {\n    this.#observer = observer;\n    this.#subscribed = true;\n  }\n\n  next(value: T) {\n    if (!this.#subscribed) {\n      return;\n    }\n\n    this.#observer.next(value);\n  }\n\n  unsubscribe() {\n    this.#subscribed = false;\n  }\n}\n","import * as React from 'react';\n\nimport { MulticastObservable } from '../../utils/Observable';\n\n/**\n * https://youtu.be/MCi6AZMkxcU\n */\nfunction animationInterval(ms: number, signal: AbortSignal, callback: (time: number) => void) {\n  // Prefer currentTime, as it'll better sync animations queued in the\n  // same frame, but if it isn't supported, performance.now() is fine.\n  const start = document.timeline?.currentTime ?? performance.now();\n\n  function frame(time: number) {\n    if (signal.aborted) return;\n    callback(time);\n    scheduleFrame(time);\n  }\n\n  function scheduleFrame(time: number) {\n    const elapsed = time - start;\n    const roundedElapsed = Math.round(elapsed / ms) * ms;\n    const targetNext = start + roundedElapsed + ms;\n    const delay = targetNext - performance.now();\n    setTimeout(() => requestAnimationFrame(frame), delay);\n  }\n\n  scheduleFrame(start);\n}\n\nfunction createHeartbeatObservable() {\n  return new MulticastObservable<number>((observer) => {\n    const controller = new AbortController();\n\n    animationInterval(1000 * 60 * 60, controller.signal, (time) => {\n      observer.next(time);\n    });\n\n    return () => {\n      controller.abort();\n    };\n  });\n}\n\nconst GLOBAL_KEY = '__Shared$HeartbeatObservable__';\nconst w = window as any;\nw[GLOBAL_KEY] = w[GLOBAL_KEY] ?? createHeartbeatObservable();\nconst heartbeatObservable: MulticastObservable<number> = w[GLOBAL_KEY];\n\nexport function useHeartbeat() {\n  const [, forceUpdate] = React.useState(0);\n\n  React.useEffect(() => {\n    const unsubscribe = heartbeatObservable.subscribe((time) => {\n      // this only serves the purpose of a forced re-render\n      forceUpdate(time);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n}\n","import { Temporal } from '@js-temporal/polyfill';\nimport * as React from 'react';\n\nimport { useHeartbeat } from './useHeartbeat';\n\nfunction round(num: number) {\n  return Math.round((num + Number.EPSILON) * 1000000) / 1000000;\n}\n\ninterface DayTimeDescriptor {\n  hour: number;\n  minute: number;\n}\n\nfunction currentPercent(\n  start: DayTimeDescriptor,\n  end: DayTimeDescriptor,\n  timeZone: string,\n  nowInstant: Temporal.Instant = Temporal.Now.instant(),\n) {\n  const { calendar } = new Intl.DateTimeFormat().resolvedOptions();\n  const now = nowInstant.toZonedDateTime({ calendar, timeZone });\n  const startOfDay = now.startOfDay();\n  const startSeconds = startOfDay.add({ hours: start.hour, minutes: start.minute }).epochSeconds;\n  const endSeconds = startOfDay.add({ hours: end.hour, minutes: end.minute }).epochSeconds;\n  const deltaNow = now.epochSeconds - startSeconds;\n  const deltaRange = endSeconds - startSeconds;\n  const ratio = deltaNow / deltaRange;\n  return round(ratio);\n}\n\ninterface IndicatorProps {\n  endHour: number;\n  endMinute: number;\n  startHour: number;\n  startMinute: number;\n  timeZone: string;\n}\n\nexport const Indicator = React.memo(function Indicator({\n  endHour,\n  endMinute,\n  startHour,\n  startMinute,\n  timeZone,\n}: IndicatorProps) {\n  useHeartbeat();\n\n  const pxWidth = 2;\n\n  /**\n   * Looking into a performance concern? It's probably this function — the\n   * Temporal polyfill is slow — this function can take upwards of 8ms to run.\n   */\n  const left = currentPercent(\n    { hour: startHour, minute: startMinute },\n    { hour: endHour, minute: endMinute },\n    timeZone,\n    // Temporal.Instant.from('2000-01-01T12:00:00-05:00'),\n  );\n\n  return (\n    <div\n      className=\"absolute z-20 -top-2 -bottom-3 min-h-full w-0.5 bg-red-500\"\n      style={{ left: `calc(${left * 100}% - ${pxWidth * left}px)` }}\n    >\n      <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 h-2 w-2 rounded-full bg-red-500\" />\n    </div>\n  );\n});\n","import { useAtom } from 'jotai';\nimport { atomWithReducer } from 'jotai/utils';\n\nfunction getDefaultValue(): boolean {\n  const format = new Intl.DateTimeFormat(undefined, { hour: 'numeric', minute: 'numeric' });\n  const resolvedOptions = format.resolvedOptions();\n  return !!resolvedOptions.hour12;\n}\n\nfunction getStorageValue<T>(key: string, initialValue: T): T {\n  try {\n    const localStorageValue = localStorage.getItem(key);\n    if (localStorageValue !== null) {\n      return JSON.parse(localStorageValue);\n    } else {\n      if (initialValue !== undefined) {\n        localStorage.setItem(key, JSON.stringify(initialValue));\n      }\n      return initialValue;\n    }\n  } catch {\n    // If user is in private mode or has storage restriction\n    // localStorage can throw. JSON.parse and JSON.stringify\n    // can throw, too.\n    return initialValue;\n  }\n}\n\nfunction setStorageValue<T>(key: string, value: T): void {\n  try {\n    const localStorageValue = JSON.stringify(value);\n    localStorage.setItem(key, localStorageValue);\n  } catch {\n    // If user is in private mode or has storage restriction\n    // localStorage can throw. Also JSON.stringify can throw.\n  }\n}\n\nconst storageKey = '12hour';\n\nconst hour12Atom = atomWithReducer(\n  getStorageValue(storageKey, getDefaultValue()),\n  (_, value: boolean) => {\n    setStorageValue(storageKey, value);\n    return value;\n  },\n);\n\nexport function useHour12State() {\n  return useAtom(hour12Atom);\n}\n","import * as React from 'react';\n\nimport { useHour12State } from '../../state/hour12';\n\ninterface TimeMarkerProps {\n  hour: number;\n  minute: number;\n}\n\nexport const TimeMarker = React.memo(function TimeMarker({ hour, minute }: TimeMarkerProps) {\n  const [hour12] = useHour12State();\n\n  /**\n   * Use `Temporal.PlainTime` when it's native. The polyfill is way too slow\n   * when formatting.\n   *\n   * ```\n   * const time = new Temporal.PlainTime(hour, minute);\n   * const formattedTime = time.toLocaleString(undefined, { ... });\n   * ```\n   */\n\n  const time = new Date();\n  time.setHours(hour, minute, 0, 0);\n\n  const formattedTime = time.toLocaleTimeString(undefined, {\n    hourCycle: hour12 ? 'h12' : 'h23',\n    hour: 'numeric',\n    minute: 'numeric',\n  });\n\n  return (\n    <div className=\"relative z-20 w-0.5 bg-black\">\n      {/* <div className=\"absolute px-2 pt-1\"> */}\n      {/* <div className=\"absolute -top-2 transform -translate-y-full -translate-x-2/4\"> */}\n      <div className=\"absolute -top-2 transform -translate-y-full\">\n        <div className=\"font-mono text-black text-xs whitespace-nowrap\">{formattedTime}</div>\n      </div>\n    </div>\n  );\n});\n","import * as React from 'react';\n\nimport { Indicator } from './Indicator';\nimport { TimeMarker } from './TimeMarker';\n\ninterface MeterProps {\n  color?: string;\n  highlightHourStart: number;\n  highlightLength: number;\n  hourStart: number;\n  length: number;\n  timeZone: string;\n}\n\nexport function Meter({\n  color = 'white',\n  highlightHourStart,\n  highlightLength,\n  hourStart,\n  length,\n  timeZone,\n}: MeterProps) {\n  const hourEnd = hourStart + length;\n  const highlightEndHour = highlightHourStart + highlightLength;\n\n  return (\n    <div className=\"pt-6\">\n      <div className=\"flex h-6 relative isolate\">\n        {Array(Math.ceil(length))\n          .fill(null)\n          .map((_, i) => {\n            const hour = hourStart + i;\n            const highlightColor =\n              hour >= highlightHourStart && hour < highlightEndHour ? color : 'white';\n\n            return (\n              <React.Fragment key={hour}>\n                <TimeMarker hour={hour} minute={0} />\n                <div className=\"flex-1\" style={{ backgroundColor: highlightColor }} />\n              </React.Fragment>\n            );\n          })}\n        <Indicator\n          endHour={hourEnd}\n          endMinute={0}\n          startHour={hourStart}\n          startMinute={0}\n          timeZone={timeZone}\n        />\n      </div>\n    </div>\n  );\n}\n","import type { MeterViewMode, Person } from '../../types';\n\nimport { Meter } from './Meter';\n\nfunction getMeterTimeProps(mode: MeterViewMode, person: Person): { start: number; length: number } {\n  switch (mode) {\n    case 'whole_day':\n      return { start: 0, length: 24 };\n    case 'working_hours':\n      return { start: person.workingHours.start, length: person.workingHours.length };\n    case 'working_hours_with_buffer':\n      return { start: person.workingHours.start - 2, length: person.workingHours.length + 4 };\n    default:\n      throw new Error(`View Mode \"${mode}\" is not supported`);\n  }\n}\n\ninterface PersonDetailProps {\n  meterViewMode: MeterViewMode;\n  onDelete(person: Person): void;\n  onMoveDown?(person: Person, delta: number): void;\n  onMoveUp?(person: Person, delta: number): void;\n  person: Person;\n}\n\nexport function PersonDetail({\n  meterViewMode,\n  onDelete,\n  onMoveDown,\n  onMoveUp,\n  person,\n}: PersonDetailProps) {\n  const { start, length } = getMeterTimeProps(meterViewMode, person);\n\n  function handleDelete() {\n    const message = `Are you sure you want to delete ${person.name} in \"${person.timezone}\"?`;\n    if (window.confirm(message)) {\n      onDelete(person);\n    }\n  }\n\n  return (\n    <article className=\"space-y-2\">\n      <header className=\"flex items-center justify-between space-x-8\">\n        <div>\n          <h1 className=\"text-2xl\">{person.name}</h1>\n          <p className=\"text-base\">{person.timezone}</p>\n        </div>\n        <div className=\"space-x-2\">\n          <button\n            aria-label=\"Move up\"\n            className=\"icon-button\"\n            disabled={onMoveUp == null}\n            onClick={() => onMoveUp?.(person, 1)}\n          >\n            ⬆️\n          </button>\n          <button\n            aria-label=\"Move down\"\n            className=\"icon-button\"\n            disabled={onMoveDown == null}\n            onClick={() => onMoveDown?.(person, 1)}\n          >\n            ⬇️\n          </button>\n          <button aria-label=\"Delete\" className=\"icon-button\" onClick={handleDelete}>\n            🗑\n          </button>\n        </div>\n      </header>\n      <Meter\n        color={person.theme.meterBackgroundColor}\n        highlightHourStart={person.workingHours.start}\n        highlightLength={person.workingHours.length}\n        hourStart={start}\n        length={length}\n        timeZone={person.timezone}\n      />\n    </article>\n  );\n}\n","import type { ChangeEvent } from 'react';\n\nimport type { MeterViewMode } from '../../types';\n\ninterface MeterViewModePickerProps {\n  onChange(mode: MeterViewMode): void;\n  value: MeterViewMode;\n}\n\nexport function MeterViewModePicker({ onChange, value }: MeterViewModePickerProps) {\n  function handleChange(event: ChangeEvent<HTMLSelectElement>) {\n    const meterViewMode = event.target.value as MeterViewMode;\n    onChange(meterViewMode);\n  }\n\n  return (\n    <div className=\"form-field\">\n      <label className=\"label\" htmlFor=\"meter-view-mode__picker\">\n        View Mode\n      </label>\n      <select className=\"picker\" id=\"meter-view-mode__picker\" onChange={handleChange} value={value}>\n        <option value={'whole_day' as MeterViewMode}>Whole day</option>\n        <option value={'working_hours' as MeterViewMode}>Working hours</option>\n        <option value={'working_hours_with_buffer' as MeterViewMode}>\n          Working hours with buffer\n        </option>\n      </select>\n    </div>\n  );\n}\n","import { useHour12State } from '../../state/hour12';\n\nexport function TimeFormatSwitch() {\n  const [hour12, setHour12] = useHour12State();\n\n  return (\n    <div className=\"flex items-center space-x-2 h-8\">\n      <label className=\"leading-tight\" htmlFor=\"hour-12__switch\" style={{ textAlign: 'end' }}>\n        Use 12 hour time format\n      </label>\n      <input\n        checked={hour12}\n        id=\"hour-12__switch\"\n        onChange={(event) => setHour12(event.target.checked)}\n        type=\"checkbox\"\n      />\n    </div>\n  );\n}\n","import {\n  identity,\n  useEncodedQueryParamState,\n  useQueryParamState,\n} from '../../state/useQueryParamState';\nimport type { MeterViewMode, Person } from '../../types';\nimport { AddPerson } from '../AddPerson';\nimport { Dev } from '../Dev';\nimport { PersonDetail } from '../PersonDetail';\n\nimport { MeterViewModePicker } from './MeterViewModePicker';\nimport { TimeFormatSwitch } from './TimeFormatSwitch';\n\nexport function App() {\n  const [meterViewMode, setMeterViewMode] = useQueryParamState<MeterViewMode>(\n    'meterview',\n    (val) => (val ?? 'whole_day') as MeterViewMode,\n    identity,\n  );\n\n  const [personState = [], setPersonState] = useEncodedQueryParamState<Person[]>('_');\n\n  function handleAdd(newPerson: Person) {\n    setPersonState([newPerson, ...personState]);\n  }\n\n  function handleDelete(person: Person) {\n    setPersonState(personState.filter(({ id }) => id !== person.id));\n  }\n\n  function handleMove(person: Person, delta: number) {\n    const personIndex = personState.findIndex(({ id }) => id === person.id);\n    const newIndex = Math.min(Math.max(personIndex + delta, 0), personState.length - 1);\n    const state = personState.filter(({ id }) => id !== person.id);\n    setPersonState([...state.slice(0, newIndex), person, ...state.slice(newIndex)]);\n  }\n\n  function handleMoveDown(person: Person, delta: number) {\n    handleMove(person, delta);\n  }\n\n  function handleMoveUp(person: Person, delta: number) {\n    handleMove(person, delta * -1);\n  }\n\n  const empty = personState.length === 0;\n\n  return (\n    <div className=\"p-6 space-y-12\">\n      <header className=\"flex items-end space-x-8\">\n        <AddPerson autoOpen={empty} onAdd={handleAdd} />\n        <div className=\"flex-1 flex flex-col sm:flex-row items-end justify-end space-y-2 sm:space-y-0 sm:space-x-8\">\n          <TimeFormatSwitch />\n          <MeterViewModePicker onChange={setMeterViewMode} value={meterViewMode} />\n        </div>\n      </header>\n      {empty ? (\n        <section className=\"text-center space-y-2 py-6\">\n          <p>📭</p>\n          <h1 className=\"font-semibold text-xl\">Empty — add a person</h1>\n        </section>\n      ) : (\n        personState.map((person, index) => (\n          <PersonDetail\n            key={person.id}\n            meterViewMode={meterViewMode}\n            onDelete={handleDelete}\n            onMoveDown={index + 1 < personState.length ? handleMoveDown : undefined}\n            onMoveUp={index > 0 ? handleMoveUp : undefined}\n            person={person}\n          />\n        ))\n      )}\n      <Dev personState={personState} setPersonState={setPersonState} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { App } from './screens/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}